(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{461:function(t,e,_){"use strict";_.r(e);var v=_(16),a=Object(v.a)({},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"_1-数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 数据类型")]),t._v(" "),_("p",[t._v("JavaScript 的数据类型，共有 "),_("strong",[t._v("七")]),t._v(" 种（其中 Symbol 是ES6新增），分为“基本类型”和“引用类型”")]),t._v(" "),_("p",[_("strong",[t._v("基本类型：")]),t._v(" 字符串(String)、数字(Number)、布尔(Boolean)、数组(Array)、空(Null)、未定义(Undefined)")]),t._v(" "),_("p",[_("strong",[t._v("引用类型：")]),t._v(" 对象(Object)")]),t._v(" "),_("p",[_("strong",[t._v("原始类型：")]),t._v(" 符号(Symbol)")]),t._v(" "),_("p",[t._v("null 和 undefined 通常被认为是特殊值，这两种类型的值唯一，就是其本身。")]),t._v(" "),_("el-divider"),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("数据类型")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("字符串（String）")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("使用双引号 \" 或单引号 ' 括起来的一个或多个字符")])]),t._v(" "),_("tr",[_("td",[t._v("数字(Number)")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("包括整数和浮点数（包含小数点的数或科学记数法的数）")])]),t._v(" "),_("tr",[_("td",[t._v("布尔(Boolean)")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("表示 true 或 false 这两种状态")])]),t._v(" "),_("tr",[_("td",[t._v("空（Null）")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("变量或内容值为空（null），可以通过给一个变量赋 null 值来清除变量的内容")])]),t._v(" "),_("tr",[_("td",[t._v("未定义（Undefined）")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("变量被创建后，未给该变量赋值，该类型只有一个取值：undefined")])]),t._v(" "),_("tr",[_("td",[t._v("数组(Array)")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("var cars=new Array();")])]),t._v(" "),_("tr",[_("td",[t._v("对象(Object)")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("JavaScript 操作的对象")])]),t._v(" "),_("tr",[_("td",[t._v("符号(Symbol)")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("Symbol 值通过Symbol函数生成。凡是属性名属于 Symbol 类型，就都是独一无二的，可以保证不会与其他属性名产生冲突。（PS：Symbol函数前不能使用new命令，否则会报错。）")])])])]),t._v(" "),_("h2",{attrs:{id:"_2-js弱类型语言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-js弱类型语言","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. js弱类型语言")]),t._v(" "),_("p",[_("strong",[t._v("JavaScript 拥有动态类型，这意味着相同的变量可用作不同的类型")])]),t._v(" "),_("p",[_("strong",[t._v("js是弱类型语言")]),t._v("，不重视类型的定义，但js会根据为变量赋值的情况自定判断该变量是何种类型。")]),t._v(" "),_("h2",{attrs:{id:"_3-数据类型转换"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 数据类型转换")]),t._v(" "),_("p",[t._v("JavaScript 拥有动态类型，可以不需要指定数据类型，在执行时会自动转换")]),t._v(" "),_("p",[t._v("JavaScript 变量可以转换为新变量或其他数据类型：")]),t._v(" "),_("ul",[_("li",[t._v("通过使用 JavaScript 函数")]),t._v(" "),_("li",[t._v("通过 JavaScript 自身自动转换")])]),t._v(" "),_("p",[t._v("Number() 转换为数字， String() 转换为字符串， Boolean() 转化为布尔值。")]),t._v(" "),_("h2",{attrs:{id:"_4-数据类型判断"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据类型判断","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.数据类型判断")]),t._v(" "),_("h3",{attrs:{id:"_4-1-typeof-操作符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-typeof-操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.1 typeof 操作符")]),t._v(" "),_("p",[t._v("typeof 操作符用来检测变量的数据类型。")]),t._v(" "),_("ol",[_("li",[t._v("写法")])]),t._v(" "),_("ul",[_("li",[_("p",[t._v("typeof() 括号")])]),t._v(" "),_("li",[_("p",[t._v("typeof object 中间加空格")])])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("返回的数据类型")])]),t._v(" "),_("ul",[_("li",[t._v("number")]),t._v(" "),_("li",[t._v("string")]),t._v(" "),_("li",[t._v("boolean")]),t._v(" "),_("li",[t._v("object")]),t._v(" "),_("li",[t._v("undefined")]),t._v(" "),_("li",[t._v("function")]),t._v(" "),_("li",[t._v("Symbols")])]),t._v(" "),_("h3",{attrs:{id:"_4-2-instanceof"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-instanceof","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.2 instanceof")]),t._v(" "),_("p",[t._v("instanceof 其实适合用于判断自定义的类实例对象, 而不是用来判断原生的数据类型")]),t._v(" "),_("h3",{attrs:{id:"_4-3-object-prototype-tostring"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-object-prototype-tostring","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.3 Object.prototype.toString")]),t._v(" "),_("p",[t._v("使用 Object.prototype.toString 方法, 可以获取到变量的准确的类型.")]),t._v(" "),_("h2",{attrs:{id:"_5-null、undefined、nan"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-null、undefined、nan","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. null、undefined、NaN")]),t._v(" "),_("p",[_("strong",[t._v("1. null")])]),t._v(" "),_("p",[t._v("null 表示“空值”，代表一个空对象指针，使用typeof运算得到 “object”，所以你可以认为它是一个特殊的对象值。")]),t._v(" "),_("p",[_("strong",[t._v("2. undefined")])]),t._v(" "),_("p",[t._v("undefined 表示“未定义”，可以把undefined看作是空的变量。")]),t._v(" "),_("p",[_("strong",[t._v("3. NaN")])]),t._v(" "),_("p",[t._v("NaN，即非数字值，是一个特殊的数值，属于Number类型。")]),t._v(" "),_("p",[_("strong",[t._v("NaN的特点:")])]),t._v(" "),_("ol",[_("li",[t._v("任何设计NaN的操作都会返回NaN，这个特点在多步计算中有可能导致问题。")]),t._v(" "),_("li",[t._v("NaN与任何值都不相等，包括其本身。")])]),t._v(" "),_("blockquote",[_("p",[t._v("ps:针对NaN的这两个特点，ECMAScript定义了isNaN() 函数。")])])],1)},[],!1,null,null,null);e.default=a.exports}}]);